// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// crossdist
arma::mat crossdist(arma::mat m1);
RcppExport SEXP _RcppCensSpatial_crossdist(SEXP m1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type m1(m1SEXP);
    rcpp_result_gen = Rcpp::wrap(crossdist(m1));
    return rcpp_result_gen;
END_RCPP
}
// varianceMat
List varianceMat(double phi, double tau2, double sigma2, double kappa, arma::mat dist, String type);
RcppExport SEXP _RcppCensSpatial_varianceMat(SEXP phiSEXP, SEXP tau2SEXP, SEXP sigma2SEXP, SEXP kappaSEXP, SEXP distSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type tau2(tau2SEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type dist(distSEXP);
    Rcpp::traits::input_parameter< String >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(varianceMat(phi, tau2, sigma2, kappa, dist, type));
    return rcpp_result_gen;
END_RCPP
}
// Spatial_model
List Spatial_model(arma::vec y, arma::mat X, arma::mat coords, double init_phi, double init_tau, arma::vec lowerp, arma::vec upperp, String type, double kappa, arma::uword Maxiter, double tol, bool infM);
RcppExport SEXP _RcppCensSpatial_Spatial_model(SEXP ySEXP, SEXP XSEXP, SEXP coordsSEXP, SEXP init_phiSEXP, SEXP init_tauSEXP, SEXP lowerpSEXP, SEXP upperpSEXP, SEXP typeSEXP, SEXP kappaSEXP, SEXP MaxiterSEXP, SEXP tolSEXP, SEXP infMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< double >::type init_phi(init_phiSEXP);
    Rcpp::traits::input_parameter< double >::type init_tau(init_tauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lowerp(lowerpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upperp(upperpSEXP);
    Rcpp::traits::input_parameter< String >::type type(typeSEXP);
    Rcpp::traits::input_parameter< double >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type Maxiter(MaxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type infM(infMSEXP);
    rcpp_result_gen = Rcpp::wrap(Spatial_model(y, X, coords, init_phi, init_tau, lowerp, upperp, type, kappa, Maxiter, tol, infM));
    return rcpp_result_gen;
END_RCPP
}
// MCEMspatial
List MCEMspatial(arma::vec y, arma::mat X, arma::vec cc, arma::vec lower, arma::vec upper, arma::mat coords, double init_phi, double init_tau, arma::vec lowerp, arma::vec upperp, String type, double kappa, arma::uword Maxiter, arma::uword nMin, arma::uword nMax, double tol, bool infM);
RcppExport SEXP _RcppCensSpatial_MCEMspatial(SEXP ySEXP, SEXP XSEXP, SEXP ccSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP coordsSEXP, SEXP init_phiSEXP, SEXP init_tauSEXP, SEXP lowerpSEXP, SEXP upperpSEXP, SEXP typeSEXP, SEXP kappaSEXP, SEXP MaxiterSEXP, SEXP nMinSEXP, SEXP nMaxSEXP, SEXP tolSEXP, SEXP infMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< double >::type init_phi(init_phiSEXP);
    Rcpp::traits::input_parameter< double >::type init_tau(init_tauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lowerp(lowerpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upperp(upperpSEXP);
    Rcpp::traits::input_parameter< String >::type type(typeSEXP);
    Rcpp::traits::input_parameter< double >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type Maxiter(MaxiterSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type nMin(nMinSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type nMax(nMaxSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type infM(infMSEXP);
    rcpp_result_gen = Rcpp::wrap(MCEMspatial(y, X, cc, lower, upper, coords, init_phi, init_tau, lowerp, upperp, type, kappa, Maxiter, nMin, nMax, tol, infM));
    return rcpp_result_gen;
END_RCPP
}
// EMspatial
List EMspatial(arma::vec y, arma::mat X, arma::vec cc, arma::vec lower, arma::vec upper, arma::mat coords, double init_phi, double init_tau, arma::vec lowerp, arma::vec upperp, String type, double kappa, arma::uword Maxiter, double tol, bool infM);
RcppExport SEXP _RcppCensSpatial_EMspatial(SEXP ySEXP, SEXP XSEXP, SEXP ccSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP coordsSEXP, SEXP init_phiSEXP, SEXP init_tauSEXP, SEXP lowerpSEXP, SEXP upperpSEXP, SEXP typeSEXP, SEXP kappaSEXP, SEXP MaxiterSEXP, SEXP tolSEXP, SEXP infMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< double >::type init_phi(init_phiSEXP);
    Rcpp::traits::input_parameter< double >::type init_tau(init_tauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lowerp(lowerpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upperp(upperpSEXP);
    Rcpp::traits::input_parameter< String >::type type(typeSEXP);
    Rcpp::traits::input_parameter< double >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type Maxiter(MaxiterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type infM(infMSEXP);
    rcpp_result_gen = Rcpp::wrap(EMspatial(y, X, cc, lower, upper, coords, init_phi, init_tau, lowerp, upperp, type, kappa, Maxiter, tol, infM));
    return rcpp_result_gen;
END_RCPP
}
// SAEMspatial
List SAEMspatial(arma::vec y, arma::mat X, arma::vec cc, arma::vec lower, arma::vec upper, arma::mat coords, double init_phi, double init_tau, arma::vec lowerp, arma::vec upperp, String type, double kappa, arma::uword Maxiter, double pc, arma::uword m, double tol, bool infM);
RcppExport SEXP _RcppCensSpatial_SAEMspatial(SEXP ySEXP, SEXP XSEXP, SEXP ccSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP coordsSEXP, SEXP init_phiSEXP, SEXP init_tauSEXP, SEXP lowerpSEXP, SEXP upperpSEXP, SEXP typeSEXP, SEXP kappaSEXP, SEXP MaxiterSEXP, SEXP pcSEXP, SEXP mSEXP, SEXP tolSEXP, SEXP infMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< double >::type init_phi(init_phiSEXP);
    Rcpp::traits::input_parameter< double >::type init_tau(init_tauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lowerp(lowerpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upperp(upperpSEXP);
    Rcpp::traits::input_parameter< String >::type type(typeSEXP);
    Rcpp::traits::input_parameter< double >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type Maxiter(MaxiterSEXP);
    Rcpp::traits::input_parameter< double >::type pc(pcSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type infM(infMSEXP);
    rcpp_result_gen = Rcpp::wrap(SAEMspatial(y, X, cc, lower, upper, coords, init_phi, init_tau, lowerp, upperp, type, kappa, Maxiter, pc, m, tol, infM));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppCensSpatial_crossdist", (DL_FUNC) &_RcppCensSpatial_crossdist, 1},
    {"_RcppCensSpatial_varianceMat", (DL_FUNC) &_RcppCensSpatial_varianceMat, 6},
    {"_RcppCensSpatial_Spatial_model", (DL_FUNC) &_RcppCensSpatial_Spatial_model, 12},
    {"_RcppCensSpatial_MCEMspatial", (DL_FUNC) &_RcppCensSpatial_MCEMspatial, 17},
    {"_RcppCensSpatial_EMspatial", (DL_FUNC) &_RcppCensSpatial_EMspatial, 15},
    {"_RcppCensSpatial_SAEMspatial", (DL_FUNC) &_RcppCensSpatial_SAEMspatial, 17},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppCensSpatial(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
